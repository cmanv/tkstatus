#!/usr/bin/env wish9.0
namespace eval zstatus::devices {
	variable searchlist {{da[0-9]} {ulpt[0-9]}}
	namespace export setup update set_theme
}

proc zstatus::devices::set_theme {newtheme} {
	variable devices
	variable statusbar
	variable separator
	variable devframe
	variable devsep
	variable devicelist
	variable theme
	set theme $newtheme

	$devframe configure -background $statusbar($theme)
	$devsep configure -background $separator($theme)
	foreach device $devicelist {
		$devframe.$device configure -fg $devices($theme) -bg $statusbar($theme)
	}
}

proc zstatus::devices::update {} {
	variable devices
	variable statusbar
	variable theme
	variable searchlist
	variable devicelist

	variable devframe
	variable devsep
	variable devpos
	variable devside

	set currentlist {}
	foreach pattern $searchlist {
		lappend currentlist {*}[glob -nocomplain -tails -dir "/dev" $pattern]
	}

	foreach device $currentlist {
		if {[lsearch $devicelist $device] == -1} {
			if {![string length [pack slaves $devframe]]} {
				pack $devframe -after $devpos -side $devside
				pack $devsep -after $devframe -fill y \
					-padx 5 -side $devside
			}
			pack [label $devframe.$device -font $devices(font)\
				 -text "$device"] -side left
			$devframe.$device configure -fg $devices($theme)\
				 -bg $statusbar($theme)
		}
	}

	foreach device $devicelist {
		if {[lsearch $currentlist $device] == -1} {
			pack forget $devframe.$device
			if {![string length [pack slaves $devframe]]} {
				pack forget $devframe $devsep
			}
		}
	}
	set devicelist $currentlist
}

proc zstatus::devices::setup { base position side } {
	variable devices
	variable searchlist
	variable statusbar
	variable separator
	variable devframe
	variable devsep
	variable devpos
	variable devside

	array set devices $::widgetarray(devices)
	array set statusbar $::widgetarray(statusbar)
	array set separator $::widgetarray(separator)
	set devframe $base.devices
	set devsep $base.devivessep
	set devpos $base.$position
	set devside $side

	frame $devframe
	frame $devsep -width 1

	variable devicelist
	set devicelist {}
	if [info exists devices(searchlist)] {
		set value $devices(searchlist)
		regsub -all {\"} $value {} value
		regsub -all {,} $value { } value
		regsub -all {[ ]+} $value { } value
		set searchlist [split $value]
	}
}

package provide @PACKAGE_NAME@ @PACKAGE_VERSION@
